{
  "_": {
    "postman_id": "ca249d35-dfc6-4d3a-bc0b-58e171d74862"
  },
  "item": [
    {
      "id": "7fae1f66-7524-40b6-a83c-c9e60883b68f",
      "name": "notifications",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "1ce7f8a4-6d3b-4615-bb8d-2445fbfd6ce0",
          "name": "Create a Notification",
          "request": {
            "name": "Create a Notification",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "notifications"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"nisi nulla Duis mollit fugia\",\n  \"proposalId\": \"ex cillum et nisi\",\n  \"agendaItemId\": \"qui ulla\",\n  \"title\": \"qui consequat sint minim\",\n  \"emailTo\": \"dolore Ut sed est eiusmod\",\n  \"accepted\": false,\n  \"emailSubject\": \"nostrud\",\n  \"emailBody\": \"est\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "d370ee0b-b1c0-4cc3-a231-44ddd5adf5be",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "notifications"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"nisi nulla Duis mollit fugia\",\n  \"proposalId\": \"ex cillum et nisi\",\n  \"agendaItemId\": \"qui ulla\",\n  \"title\": \"qui consequat sint minim\",\n  \"emailTo\": \"dolore Ut sed est eiusmod\",\n  \"accepted\": false,\n  \"emailSubject\": \"nostrud\",\n  \"emailBody\": \"est\"\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "db351594-5c27-42c1-a5b8-b692da59a68f",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[POST]::/notifications - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[POST]::/notifications - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[POST]::/notifications - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Notification ID\"},\"proposalId\":{\"type\":\"string\",\"description\":\"Proposal ID\"},\"agendaItemId\":{\"type\":\"string\",\"description\":\"Agenda Item ID\"},\"title\":{\"type\":\"string\",\"description\":\"Notification Title\"},\"emailTo\":{\"type\":\"string\",\"description\":\"Email Address to send the email to\"},\"accepted\":{\"type\":\"boolean\",\"description\":\"Proposal Accepted\"},\"emailSubject\":{\"type\":\"string\",\"description\":\"Email Subject\"},\"emailBody\":{\"type\":\"string\",\"description\":\"Email Body\"}},\"type\":\"object\"}}\n\n// Validate if response matches JSON schema \npm.test(\"[POST]::/notifications - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        },
        {
          "id": "fb9d18c1-94d9-4aad-b4cc-8bfe4d1651cb",
          "name": "Get All Notifications",
          "request": {
            "name": "Get All Notifications",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "notifications"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "ff7bec5f-b323-4e31-9596-2ba102773850",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "notifications"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "[\n  {\n    \"id\": \"aliqua\",\n    \"proposalId\": \"velit mollit cupidatat\",\n    \"agendaItemId\": \"ut ea\",\n    \"title\": \"cillum dolore nisi anim ea\",\n    \"emailTo\": \"enim esse ut laborum aliquip\",\n    \"accepted\": true,\n    \"emailSubject\": \"ut anim in\",\n    \"emailBody\": \"ipsum eiusmod irure\"\n  },\n  {\n    \"id\": \"dolor dolore ad\",\n    \"proposalId\": \"anim esse irure\",\n    \"agendaItemId\": \"laborum ea adipisicing cupidatat\",\n    \"title\": \"Excepteur ipsum\",\n    \"emailTo\": \"ullamco enim commodo\",\n    \"accepted\": true,\n    \"emailSubject\": \"aliquip dolor dolor nulla\",\n    \"emailBody\": \"Duis dolor \"\n  }\n]",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c7a13548-b496-4f4d-809f-5cf852d77859",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/notifications - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/notifications - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/notifications - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"array\",\"items\":{\"properties\":{\"id\":{\"type\":\"string\",\"description\":\"Notification ID\"},\"proposalId\":{\"type\":\"string\",\"description\":\"Proposal ID\"},\"agendaItemId\":{\"type\":\"string\",\"description\":\"Agenda Item ID\"},\"title\":{\"type\":\"string\",\"description\":\"Notification Title\"},\"emailTo\":{\"type\":\"string\",\"description\":\"Email Address to send the email to\"},\"accepted\":{\"type\":\"boolean\",\"description\":\"Proposal Accepted\"},\"emailSubject\":{\"type\":\"string\",\"description\":\"Email Subject\"},\"emailBody\":{\"type\":\"string\",\"description\":\"Email Body\"}},\"type\":\"object\"}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/notifications - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    },
    {
      "id": "528824ee-f40f-4cda-8792-43fdf01aae80",
      "name": "service",
      "description": {
        "content": "",
        "type": "text/plain"
      },
      "item": [
        {
          "id": "3bc8ed62-d28c-4aa3-963f-f503e12fe895",
          "name": "Get Service Info",
          "request": {
            "name": "Get Service Info",
            "description": {
              "type": "text/plain"
            },
            "url": {
              "path": [
                "service",
                "info"
              ],
              "host": [
                "{{baseUrl}}"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "method": "GET"
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json"
              },
              "id": "f215b35a-862b-41c9-befb-a67b4f17578b",
              "name": "OK",
              "originalRequest": {
                "url": {
                  "path": [
                    "service",
                    "info"
                  ],
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "method": "GET",
                "body": {}
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "body": "{}",
              "cookie": []
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f688949f-0881-49d8-9f46-0d3cee61155c",
                "type": "text/javascript",
                "exec": [
                  "// Validate status 2xx \npm.test(\"[GET]::/service/info - Status code is 2xx\", function () {\n   pm.response.to.be.success;\n});\n",
                  "// Validate if response header has matching content-type\npm.test(\"[GET]::/service/info - Content-Type is application/json\", function () {\n   pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");\n});\n",
                  "// Validate if response has JSON Body \npm.test(\"[GET]::/service/info - Response has JSON Body\", function () {\n    pm.response.to.have.jsonBody();\n});\n",
                  "// Response Validation\nconst schema = {\"type\":\"object\",\"items\":{\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"Service Name\"},\"version\":{\"type\":\"string\",\"description\":\"Service Version\"},\"source\":{\"type\":\"string\",\"description\":\"Service Source\"},\"podId\":{\"type\":\"string\",\"description\":\"Service Pod ID\"},\"podNamespace\":{\"type\":\"string\",\"description\":\"Service Pod Namespace\"},\"podNodeName\":{\"type\":\"string\",\"description\":\"Service Pod Node Name\"}}}}\n\n// Validate if response matches JSON schema \npm.test(\"[GET]::/service/info - Schema is valid\", function() {\n    pm.response.to.have.jsonSchema(schema,{unknownFormats: [\"int32\", \"int64\", \"float\", \"double\"]});\n});\n"
                ]
              }
            }
          ],
          "protocolProfileBehavior": {
            "disableBodyPruning": true
          }
        }
      ],
      "event": []
    }
  ],
  "event": [],
  "variable": [
    {
      "type": "string",
      "value": "http://localhost:8080",
      "key": "baseUrl"
    }
  ],
  "info": {
    "_postman_id": "ca249d35-dfc6-4d3a-bc0b-58e171d74862",
    "name": "Notifications Service",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "description": {
      "content": "Notifications Service\n\nContact Support:\n Name: Mauricio Salatino\n Email: salaboy@gmail.com",
      "type": "text/plain"
    }
  }
}